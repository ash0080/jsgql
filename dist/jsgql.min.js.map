{"version":3,"file":"jsgql.min.js","sources":["../src/jsgql.js"],"sourcesContent":["'use strict'\n\nconst gql = require('graphql-tag')\n\nfunction jsgql ({ type, name, variables, method, fields, types, methodArgs }) {\n  let gqlStr = `${type} ${name}`\n\n  gqlStr = `${gqlStr}${processName(variables, types)} {\n    ${method}${processMethod(variables, methodArgs)} {\n      ${processFields(fields)}\n    }\n  }`\n\n  return gql(gqlStr)\n}\n\nfunction processValue (value) {\n  return processType(value) === 'String' ? `\"${value}\"` : value\n}\n\nfunction processType (obj) {\n  let type = {}.toString.call(obj).split(' ')[1].slice(0, -1)\n\n  return type === 'Number' ? 'Int' : type\n}\n\nfunction processName (variables, types = {}) {\n  if (!variables) return ''\n  let variablesList = []\n\n  for (let name in variables) {\n    let value = variables[name]\n    let type = types[name] || processType(value)\n\n    if (name.includes('id') || name.includes('Id')) type = 'ID'\n\n    variablesList.push(`$${name}: ${type}!`)\n  }\n\n  return `(${variablesList.join(', ')})`\n}\n\nfunction processMethod (variables, methodArgs) {\n  if (!variables) return methodArgs ? `(${processMethodArgs(methodArgs)})` : ''\n\n  let variablesList = []\n\n  for (let name in variables) {\n    variablesList.push(`${name}: $${name}`)\n  }\n\n  let methodString = `(${variablesList.join(', ')}`\n\n  if (methodArgs) methodString += `, ${processMethodArgs(methodArgs)}`\n\n  methodString += ')'\n\n  return methodString\n}\n\nfunction processMethodArgs (args) {\n  if (!args) return ''\n\n  let argsList = []\n\n  for (let name in args) {\n    let value = args[name]\n\n    if (!Array.isArray(value) && typeof value === 'object' && !value.__variable__) {\n      argsList.push(`${name}: { ${processMethodArgs(value)} }`)\n    } else {\n      if (Array.isArray(value)) value = `[${value.map(v => processValue(v)).join(', ')}]`\n      else if (typeof value === 'object') value = `$${value.__variable__}`\n      else value = processValue(value)\n\n      argsList.push(`${name}: ${value}`)\n    }\n  }\n\n  return argsList.join(', ')\n}\n\nfunction processFields (fields) {\n  if (!fields) return ''\n\n  return fields.reduce((fieldsStr, field) => {\n    if (Array.isArray(field)) {\n      let [key, subFields] = field\n\n      fieldsStr += ` ${key} {\n        ${processFields(subFields)}\n      }`\n    } else {\n      fieldsStr += `${field}\\n`\n    }\n\n    return fieldsStr\n  }, '')\n}\n\nexports = module.exports = jsgql\nexports.processName = processName\nexports.processMethod = processMethod\nexports.processMethodArgs = processMethodArgs\nexports.processFields = processFields\nexports.processType = processType\nexports.processValue = processValue\nexports.gql = gql\n"],"names":["processValue","value","processType","obj","let","type","toString","call","split","slice","processName","variables","types","variablesList","name","includes","push","join","processMethod","methodArgs","processMethodArgs","methodString","args","argsList","Array","isArray","__variable__","map","v","processFields","fields","reduce","fieldsStr","field","exports","module","ref","method","gqlStr","gql"],"mappings":"+WAgBA,SAASA,EAAcC,GACrB,MAA8B,WAAvBC,EAAYD,GAAsB,IAAIA,MAAWA,EAG1D,SAASC,EAAaC,GACpBC,IAAIC,KAAUC,SAASC,KAAKJ,GAAKK,MAAM,KAAK,GAAGC,MAAM,GAAI,GAEzD,MAAgB,WAATJ,EAAoB,MAAQA,EAGrC,SAASK,EAAaC,EAAWC,GAC/B,uBAAKD,EAAW,MAAO,GACvBP,IAAIS,KAEJ,IAAKT,IAAIU,KAAQH,EAAW,CAC1BP,IAAIH,EAAQU,EAAUG,GAClBT,EAAOO,EAAME,IAASZ,EAAYD,IAElCa,EAAKC,SAAS,OAASD,EAAKC,SAAS,SAAOV,EAAO,MAEvDQ,EAAcG,KAAK,IAAIF,OAAST,OAGlC,MAAO,IAAIQ,EAAcI,KAAK,UAGhC,SAASC,EAAeP,EAAWQ,GACjC,IAAKR,EAAW,OAAOQ,EAAa,IAAIC,EAAkBD,OAAiB,GAE3Ef,IAAIS,KAEJ,IAAKT,IAAIU,KAAQH,EACfE,EAAcG,KAAKF,QAAaA,GAGlCV,IAAIiB,EAAe,IAAIR,EAAcI,KAAK,MAM1C,OAJIE,IAAYE,GAAgB,KAAKD,EAAkBD,IAEvDE,GAAgB,IAKlB,SAASD,EAAmBE,GAC1B,IAAKA,EAAM,MAAO,GAElBlB,IAAImB,KAEJ,IAAKnB,IAAIU,KAAQQ,EAAM,CACrBlB,IAAIH,EAAQqB,EAAKR,GAEZU,MAAMC,QAAQxB,IAA2B,iBAAVA,GAAuBA,EAAMyB,cAGrCzB,EAAtBuB,MAAMC,QAAQxB,GAAgB,IAAIA,EAAM0B,IAAI,SAAAC,UAAK5B,EAAa4B,KAAIX,KAAK,UACjD,iBAAVhB,EAA4B,IAAIA,EAAkB,aACrDD,EAAaC,GAE1BsB,EAASP,KAAKF,OAAYb,IAN1BsB,EAASP,KAAKF,SAAcM,EAAkBnB,SAUlD,OAAOsB,EAASN,KAAK,MAGvB,SAASY,EAAeC,GACtB,OAAKA,EAEEA,EAAOC,OAAO,SAACC,EAAWC,GAW/B,OAVIT,MAAMC,QAAQQ,GAGhBD,GAAa,wBACTH,oBAGJG,GAAaC,OAGRD,GACN,IAdiB,IAiBtBE,EAAUC,UAhGV,SAAgBC,OAAE/B,SAAMS,SAAMH,cAAW0B,WAAQP,WAAQlB,UAAOO,eAC1DmB,EAASjC,MAAWS,EAQxB,OANAwB,EAAS,GAAGA,EAAS5B,EAAYC,EAAWC,cACxCyB,EAASnB,EAAcP,EAAWQ,gBAChCU,EAAcC,kBAIbS,EAAID,iBAwFS5B,EACtBwB,gBAAwBhB,EACxBgB,oBAA4Bd,EAC5Bc,gBAAwBL,EACxBK,cAAsBhC,EACtBgC,eAAuBlC,EACvBkC,MAAcK"}